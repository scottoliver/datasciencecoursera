a <- available.packages()
head(rownames(a,3))
install.packages(c("slidify","ggplot2","devtools"))
library(ggplot2)
search()
a <- available.packages()
print a
View(a)
install.packages("kerntools")
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
q()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
tw
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
getwd()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 = rbinom(1, size = 100, prob = 0.7)
flips2 = rbinom(100, size = 1, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
colmeans(my_pois)
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm10
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
?par
?plot
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
setwd("~/datasciencecoursera/R Programming/Week 4"
)
getwd()
outcome <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
unique(outcome$State)
outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
source(best.R)
source(best.R)
source("best.R")
best("TR", "heart-attack")
source("best.R")
best("TR", "heart-attack")
best("TX", "heart-attack")
?stop
outcome[outcome$State == "TX", ]
outcome[, 11]
min(outcome[, 11], na.rm = TRUE)
outcome[, outcome[, 11] == 10.1]
outcome[outcome[, 11] == 10.1, 1]
outcome[outcome[, 11] == 10.1, ]
outcome[na.omit(outcome[, 11]) == 10.1, ]
min(outcome[, 11], na.rm = TRUE)
outcome[outcome[, 11] == 10.1, ]
source("best.R")
best("TR", "heart attack")
best("TX", "heart atack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
best("NY", "heart failure")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TR", "heart attack")
best("TX", "heart atack")
source("best.R")
best("TX", "heart atack")
best("TR", "heart attack")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
View(get_hosptial_name)
source("best.R")
best("TX", "heart attack")
best("NY", "heart failure")
best("LA", "heart attack")
best("LA", "heart failure")
best("LA", "pneumonia")
outcome[order(11), ]
outcome[order(outcome[, 11]), ]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "best")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
rankhospital("MN", "heart attack", "second")
rankhospital("MN", "heart attack", 5000)
df = data.frame(hospital = character(), state = character())
df2 = data.frame(matrix())
colNames(df2, hospital, state)
columns <- c(hospital, state)
columns <- c("hospital", "state")
df2 <- colnames(columns)
dim(df2)
?colnames
colnames(df2) <- columns
df2 = data.frame(matrix())
colnames(df2) <- columns
df3 <- data.frame()
colnames(df3) <- columns
df3 <- data.frame(matrix(ncol=2))
colnames(df3) <- columns
dim(df3)
str(df3)
df3[1, df3$hospital] <- "Memorial Hermann"
df3[1] <- c("Memorial Hermann", "TX")
